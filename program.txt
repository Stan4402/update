<?php
/**
 * File Scanner for Backdoor Detection
 *
 * Scans directories for potentially malicious files and suspicious patterns.
 */

function scan_directory($directory) {
    $results = [];

    try {
        // Use RecursiveDirectoryIterator for scanning subdirectories
        $iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($directory));
        
        foreach ($iterator as $file) {
            if ($file->isDir() || !$file->isReadable()) {
                continue; // Skip directories and unreadable files
            }

            $file_path = $file->getPathname();
            $file_content = @file_get_contents($file_path);

            // Skip empty or unreadable files
            if ($file_content === false || trim($file_content) === '') {
                continue;
            }

            // Suspicious patterns to check for
            $patterns = [
                '/base64_(encode|decode)\s*\(/i',
                '/eval\s*\(/i',
                '/system\s*\(/i',
                '/gzinflate\s*\(/i',
                '/str_rot13\s*\(/i',
                '/convert_uu\s*\(/i',
                '/shell_exec\s*\(/i',
                '/exec\s*\(/i',
                '/move_uploaded_file\s*\(/i',
                '/fwrite\s*\(/i',
                '/file_get_contents\s*\(/i',
                '/mysql_connect\s*\(/i',
                '/mysqli_connect\s*\(/i',
                '/symlink\s*\(/i',
                '/magicboom|FATHURFREAKZ|shell_data/i', // Specific keywords
                '/__halt_compiler/i',
            ];

            // Check patterns in the file content
            foreach ($patterns as $pattern) {
                if (preg_match($pattern, $file_content)) {
                    $results[] = $file_path;
                    break;
                }
            }
        }
    } catch (Exception $e) {
        echo "<p>Error scanning directory: " . htmlspecialchars($e->getMessage()) . "</p>";
    }

    return $results;
}

// Define the root directory to scan
$root_directory = __DIR__;

// Run the scan
$backdoor_files = scan_directory($root_directory);

// Display results
header('Content-Type: text/html; charset=utf-8');
echo "<h1>Backdoor Scanner Results</h1>";
if (!empty($backdoor_files)) {
    echo "<p>Suspicious files detected:</p><ul>";
    foreach ($backdoor_files as $file) {
        echo "<li>" . htmlspecialchars($file) . "</li>";
    }
    echo "</ul>";
} else {
    echo "<p>No suspicious files detected.</p>";
}
?>
